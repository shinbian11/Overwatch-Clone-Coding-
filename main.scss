$url: "https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images";

body {
  height: 100vh;
  background-image: url("#{$url}/bg.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-attachment: fixed; /*배경은 scroll 해도 움직이지 않음*/
}

.container {
  padding: 50px 0;

  .heroes {
    display: flex;
    flex-wrap: wrap;
    /* background-color: orange; */
    max-width: 700px;
    /* 
      display 가 block 속성이고,
      width 가 정해져 있으면, 
      margin 에 0 값을 주면 가운데 정렬 효과가 나타난다 
      */
    margin: 0 auto; /* .heroes 자체가 가운데 정렬이 된다 */
    justify-content: center; /* flex 내의 flex-items 들이 가운데 정렬이 되는 것이다. */
    padding: 40px 20px;

    .hero {
      width: 80px;
      height: 84px;
      margin: 4px;
      border: 3px solid #fff;
      border-radius: 10px;

      /* padding, border width 등 요소의 전체 너비가 증가될 수 있는 요소들을 모두 포함하여 width를 결정함 */
      /* border은 3px, margin은 4px 이지만, 이런 것들 다 포함해서 width 가 84px 이 나오도록 함 */
      /* box-sizing : content-box 로 했다면, width는 84px 보다 더 컸을 것이다. */

      box-sizing: border-box;
      background-color: #555;
      overflow: hidden;
      transform: skewX(-14deg);
      transition: transform 0.1s, background-color 0.6s;

      &:hover {
        background-color: #ff9c00;
        transform: skewX(-14deg) scale(1.3);
        z-index: 1;
      }

      .image {
        width: 140%;
        height: 100%;
        background-position: center;
        background-size: 90px;
        background-repeat: no-repeat;

        /* skewX(-14deg)값 원상복귀 => skewX(14deg) 하면 됨!*/
        transform: skewX(14deg) translateX(-16px);
      }
      @for $i from 1 through 32 {
        // & 은 .hero 이다.
        &:nth-child(#{$i}) .image {
          background-image: url("#{$url}/hero#{$i}.png");
        }
      }
    }
  }
  .logo {
    // display 가 block 속성이고, width 가 정해져 있으면, margin 에 0 값을 주면 가운데 정렬 효과가 나타난다
    max-width: 300px;
    margin: 0 auto;

    padding: 0 20px;

    img {
      width: 100%;
    }
  }
}
